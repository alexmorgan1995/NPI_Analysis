"Beta_1/4", "Beta_2", "Beta_3")
#Altering the dataframe for ggplot input
statsinfecv <- melt(out1, id.vars = c("Time"), measure.vars = c("Infected_Iv", "Infected_Is", "RemInf"))
statsbeta1 <- melt(out1, id.vars =  c("Time"), measure.vars = c("Beta_1", "Beta_2", "Beta_3", "Beta_4"))
statsrecov <- melt(out1, id.vars = c("Time"), measure.vars = c("Recovv", "Recovs", "RemRecov"))
#Vulnerable Population is the Forefront Plot
statsrecov$variable <- factor(statsrecov$variable, levels=rev(levels(statsrecov$variable)))
statsinfecv$variable <- factor(statsinfecv$variable, levels=rev(levels(statsinfecv$variable)))
#Infecteds Plot
pinfB <- ggplot(data = statsinfecv, aes(x = (Time), y = value, col = variable))  + theme_bw() +
labs(x ="Time (Days)", y = "Proportion Infected", color = "Population") + scale_y_continuous(limits = c(0,0.1), expand = c(0,0)) +
theme(legend.position = "bottom", legend.title = element_blank(), legend.text=element_text(size=14),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.7,0.7,0.8,0.8),"cm")) + scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values=c('blue','darkgreen','red'), labels= c("General", "Shielders", "Vulnerable")) +
geom_rect(data=phase2, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_rect(data=phase3, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.35, inherit.aes = FALSE) +
geom_rect(data=phase4, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_text(data = phase1, aes(x = xmin, y = 0.085, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 20) +
geom_text(data = phase2, aes(x = xmin, y = 0.085, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0) +
geom_text(data = phase3, aes(x = xmin, y = 0.085, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 25) +
geom_text(data = phase4, aes(x = xmin, y = 0.085, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 120) +
geom_line(size = 1.02, stat = "identity")
#Beta Plot
pbetaB <- ggplot(data = statsbeta1, aes(x = (Time), y = value, lty = variable)) + theme_bw() +
labs(x ="Time (Days)", y = "Beta Value", lty = " ") + scale_y_continuous(limits = c(0,0.4),  expand = c(0,0)) +
theme(legend.position = "bottom", legend.title = element_text(size=14), legend.text=element_text(size=14),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.7,0.7,0.8,0.8),"cm")) + scale_x_continuous(expand = c(0, 0))  +
scale_linetype_manual(values=c(1,2,4, 3), labels= c("Beta 1", "Beta 2", "Beta 3", "Beta 4")) +
geom_rect(data=phase2, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_rect(data=phase3, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.35, inherit.aes = FALSE) +
geom_rect(data=phase4, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_text(data = phase1, aes(x = xmin, y = 0.3, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 20) +
geom_text(data = phase2, aes(x = xmin, y = 0.3, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0) +
geom_text(data = phase3, aes(x = xmin, y = 0.3, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 25) +
geom_text(data = phase4, aes(x = xmin, y = 0.3, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 120) +
geom_line(size = 1.02, stat = "identity", col = "black")
ggplot(data = statsbeta1, aes(x = (Time), y = value, lty = variable)) + theme_bw() +geom_line(size = 1.02, stat = "identity", col = "black")
#### SCENARIO C ####
#Functions for the 4 Betas in the model - Plotting function visualises the beta(t) throughout the model run
beta1 <- function(time, tstart1, tdur) {
gamma <- 1/(GenTime(3.3,2.8))
beta1_2 <- 1.85*(gamma)
betalin <- approxfun(x=c(tstart1+tdur, tstart1+tdur+(12*7)), y = c(0.8*(gamma), beta1_2), method="linear", rule  =2)
ifelse((time >= tstart1 & time <= tstart1+tdur),
0.8*(gamma), #Phase 2
ifelse((time >= tstart1+tdur & time <= tstart1+tdur+(12*7)),
betalin(time), #Phase 3
ifelse((time >= tstart1+tdur+(12*7) & time <= 730),
beta1_2, #Phase 4
1.7*(gamma))))} #Phase 1
plot(beta1(seq(0,730), 71, (6*7)))
beta2 <- function(time, tstart1, tdur) {
gamma <- 1/(GenTime(3.3,2.8))
beta1_2 <- 1.85*gamma
betalin <- approxfun(x=c(tstart1+tdur, tstart1+tdur+(12*7)), y = c(0.9*(gamma), beta1_2), method="linear", rule  =2)
ifelse((time >= tstart1 & time <= tstart1+tdur),
0.9*(gamma), #Phase 2
ifelse((time >= tstart1+tdur & time <= tstart1+tdur+(12*7)),
betalin(time), #Phase 3
ifelse((time >= tstart1+tdur+(12*7) & time <= 730),
beta1_2, #Phase 4
1.7*(gamma))))} #Phase 1
plot(beta2(seq(0,730), 71, (6*7)))
beta3 <- function(time, tstart1, tdur) {
gamma <- 1/(GenTime(3.3,2.8))
beta1_2 <- 1.85*gamma
betalin <- approxfun(x=c(tstart1+tdur, tstart1+tdur+(12*7)), y = c(0.9*(gamma), beta1_2), method="linear", rule  =2)
ifelse((time >= tstart1 & time <= tstart1+tdur),
0.9*(gamma), #Phase 2
ifelse((time >= tstart1+tdur & time <= tstart1+tdur+(12*7)),
betalin(time), #Phase 3
ifelse((time >= tstart1+tdur+(12*7) & time <= 730),
beta1_2, #Phase 4
1.7*(gamma))))} #Phase 1
plot(beta3(seq(0,730), 71, (6*7)))
beta4 <- function(time,tstart1,tdur) {
gamma <- 1/(GenTime(3.3,2.8))
beta1_2 <- 1.85*(gamma)
betalin <- approxfun(x=c(tstart1+tdur, tstart1+tdur+(12*7)), y = c(0.8*(gamma), beta1_2), method="linear", rule  =2)
ifelse((time >= tstart1 & time <= tstart1+tdur),
0.8*(gamma), #Phase 2
ifelse((time >= tstart1+tdur & time <= tstart1+tdur+(12*7)),
betalin(time), #Phase 3
ifelse((time >= tstart1+tdur+(12*7) & time <= 730),
beta1_2, #Phase 4
1.7*(gamma))))} #Phase 1
plot(beta4(seq(0,730), 71, (6*7)))
#Running the Model
out1 <- data.frame(ode(y = init, func = SIRS, times = times, parms = parms))
#Manipulating the Model Output to scale the Remainder Populations and Overall Pop size so that N = 1
out1$RemS <- out1$Sr1 + out1$Sr2 + out1$Sr3; out1$RemI <- out1$Ir1 + out1$Ir2 + out1$Ir3; out1$RemR <- out1$Rr1 + out1$Rr2 + out1$Rr3
out1$Sv <- out1$Sv/0.20; out1$Ss <- out1$Ss/0.20; out1$RemS <- out1$RemS/0.60
out1$Iv <- out1$Iv/0.20; out1$Is <- out1$Is/0.20; out1$RemI <- out1$RemI/0.60
out1$Rv <- out1$Rv/0.20; out1$Rs <- out1$Rs/0.20; out1$RemR <- out1$RemR/0.60
out1$Cv <- out1$Cv/0.2
out1$Beta1 <- beta1(times, 71, (6*7)); out1$Beta2 <- beta2(times, 71, (6*7)); out1$Beta3 <- beta3(times, 71, (6*7))
scenCCum  <- out1$Cv[out1$time == 113+(365)] - out1$Cv[out1$time == 113]
#Naming the Output Columns
colnames(out1) <- c("Time", "Suscv", "Suscs", "Suscr1", "Suscr2","Suscr3",
"Infected_Iv", "Infected_Is", "Infected_Ir1", "Infected_Ir2", "Infected_Ir3",
"Recovv", "Recovs", "Recovr1", "Recovr2", "Recovr2","CumV",
"RemSusc", "RemInf", "RemRecov",
"Beta_1/4", "Beta_2", "Beta_3")
#Altering the dataframe for ggplot input
statsinfecv <- melt(out1, id.vars = c("Time"), measure.vars = c("Infected_Iv", "Infected_Is", "RemInf"))
statsbeta1 <- melt(out1, id.vars =  c("Time"), measure.vars = c("Beta_1", "Beta_2", "Beta_3", "Beta_4"))
statsrecov <- melt(out1, id.vars = c("Time"), measure.vars = c("Recovv", "Recovs", "RemRecov"))
#Vulnerable Population is the Forefront Plot
statsrecov$variable <- factor(statsrecov$variable, levels=rev(levels(statsrecov$variable)))
statsinfecv$variable <- factor(statsinfecv$variable, levels=rev(levels(statsinfecv$variable)))
#Infecteds Plot
pinfC <- ggplot(data = statsinfecv, aes(x = (Time), y = value, col = variable))  + theme_bw() +
labs(x ="Time (Days)", y = "Proportion Infected", color = "Population") + scale_y_continuous(limits = c(0,0.1), expand = c(0,0)) +
theme(legend.position = "bottom", legend.title = element_blank(), legend.text=element_text(size=14),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.7,0.7,0.8,0.8),"cm")) + scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values=c('blue','darkgreen','red'), labels= c("General", "Shielders", "Vulnerable")) +
geom_rect(data=phase2, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_rect(data=phase3, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.35, inherit.aes = FALSE) +
geom_rect(data=phase4, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_text(data = phase1, aes(x = xmin, y = 0.085, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 20) +
geom_text(data = phase2, aes(x = xmin, y = 0.085, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0) +
geom_text(data = phase3, aes(x = xmin, y = 0.085, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 25) +
geom_text(data = phase4, aes(x = xmin, y = 0.085, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 120) +
geom_line(size = 1.02, stat = "identity")
#Beta Plot
pbetaC <- ggplot(data = statsbeta1, aes(x = (Time), y = value, lty = variable)) + theme_bw() +
labs(x ="Time (Days)", y = "Beta Value", lty = " ") + scale_y_continuous(limits = c(0,0.4),  expand = c(0,0)) +
theme(legend.position = "bottom", legend.title = element_text(size=14), legend.text=element_text(size=14),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x= element_text(size=14),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.7,0.7,0.8,0.8),"cm")) + scale_x_continuous(expand = c(0, 0))  +
scale_linetype_manual(values=c(1,2,4, 3), labels= c("Beta 1", "Beta 2", "Beta 3", "Beta 4")) +
geom_rect(data=phase2, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_rect(data=phase3, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.35, inherit.aes = FALSE) +
geom_rect(data=phase4, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_text(data = phase1, aes(x = xmin, y = 0.3, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 20) +
geom_text(data = phase2, aes(x = xmin, y = 0.3, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0) +
geom_text(data = phase3, aes(x = xmin, y = 0.3, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 25) +
geom_text(data = phase4, aes(x = xmin, y = 0.3, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 120) +
geom_line(size = 1.02, stat = "identity", col = "black")
ggplot(data = statsbeta1, aes(x = (Time), y = value, lty = variable)) + theme_bw() +geom_line(size = 1.02, stat = "identity", col = "black")
#### FINALISED PLOTTING ####
#Anti-Aliasing in Plots - Can Ignore
plot1 <- ggarrange(pinfA, NULL, pbetaA, nrow = 3, ncol =1, align = "v",
heights = c(0.9, -0.03, 0.5) )
plot2 <- ggarrange(pinfB, NULL, pbetaB, nrow = 3, ncol =1, align = "v",
heights = c(0.9, -0.03, 0.5) )
plot3 <- ggarrange(pinfC, NULL, pbetaC, nrow = 3, ncol =1, align = "v",
heights = c(0.9, -0.03, 0.5) )
plotall <- ggarrange(plot1, plot2, plot3, nrow = 1, ncol = 3, align = "h", labels = c("A", "B", "C"), font.label = c(size = 20), common.legend = TRUE, legend = "bottom" )
ggsave(plotall, filename = "ExtraFig.png", dpi = 300, type = "cairo", width = 17.5, height = 10, units = "in")
outimp <- read.csv("SIRS_MComp_simulation_4-4-92.csv")
outimp <- outimp[,1:(ncol(outimp)-3)]
out <- outimp[, -grep( "cum" , colnames(outimp) )]
setwd("C:/Users/amorg/Documents/PhD/nCoV Work/Models") # This is where the plots output and where the .csv's are stored
rm(list=ls())
library("deSolve"); library("ggplot2"); library("ggpubr"); library("reshape2"); library("Cairo")
#### Common Model Parameters + Functions ####
phase1 <- data.frame(xmin=0, xmax=71, ymin=-Inf, ymax=Inf, name = "P1")
phase2 <- data.frame(xmin=71, xmax=71+(6*7), ymin=-Inf, ymax=Inf, name = "P2")
phase3 <- data.frame(xmin=71+(6*7), xmax=71+(6*7)+(12*7), ymin=-Inf, ymax=Inf, name = "P3")
phase4 <- data.frame(xmin=71+(6*7)+(12*7), xmax=Inf, ymin=-Inf, ymax=Inf, name = "P4")
#### Population Structure - 4-4-92 ####
#Import in Dataframe and Remove Cumulative Inf Columns
outimp <- read.csv("SIRS_MComp_simulation_4-4-92.csv")
outimp <- outimp[,1:(ncol(outimp)-3)]
out <- outimp[, -grep( "cum" , colnames(outimp) )]
View(out)
#Import in Dataframe and Remove Cumulative Inf Columns
outimp <- read.csv("SIRS_MComp_simulation_4-4-92.csv")
outimp <- outimp[,1:(ncol(outimp)-3)]
out <- outimp[, -grep( "cum" , colnames(outimp) )]
#Create Dataframe for Plotting and Aggregate
out1 <- data.frame("time" = out$t,
"SuscV" = out[,grepl( "Sv" , names(out) )]/0.04,
"SuscS" = out[,grepl( "Sh" , names(out) )]/0.04,
"SuscR" = rowSums(out[,grepl( "Sr" , names(out) )])/0.92,
"InfV" = out[,grepl( "Iv" , names(out) )]/0.04,
"InfS" = out[,grepl( "Ih" , names(out) )]/0.04,
"InfR" = rowSums(out[,grepl( "Ir" , names(out) )])/0.92,
"RecovV" = out[,grepl( "Rv" , names(out) )]/0.04,
"RecovS" = out[,grepl( "Rh" , names(out) )]/0.04,
"RecovR" = rowSums(out[,grepl( "Rr" , names(out) )])/0.92)
out[,grepl( "Sv" , names(out) )]
out[,grepl( "Sh" , names(out) )]
rowSums(out[,grepl( "Sr" , names(out) )])
setwd("C:/Users/amorg/Documents/PhD/nCoV Work/Models") # This is where the plots output and where the .csv's are stored
rm(list=ls())
library("deSolve"); library("ggplot2"); library("ggpubr"); library("reshape2"); library("Cairo")
#### Common Model Parameters + Functions ####
phase1 <- data.frame(xmin=0, xmax=71, ymin=-Inf, ymax=Inf, name = "P1")
phase2 <- data.frame(xmin=71, xmax=71+(6*7), ymin=-Inf, ymax=Inf, name = "P2")
phase3 <- data.frame(xmin=71+(6*7), xmax=71+(6*7)+(12*7), ymin=-Inf, ymax=Inf, name = "P3")
phase4 <- data.frame(xmin=71+(6*7)+(12*7), xmax=Inf, ymin=-Inf, ymax=Inf, name = "P4")
#### Population Structure - 4-4-92 ####
#Import in Dataframe and Remove Cumulative Inf Columns
outimp <- read.csv("SIRS_MComp_simulation_4-4-92.csv")
outimp <- outimp[,1:(ncol(outimp)-3)]
out <- outimp[, -grep( "cum" , colnames(outimp) )]
#Create Dataframe for Plotting and Aggregate
out1 <- data.frame("time" = out$t,
"SuscV" = out[,grepl( "Sv" , names(out) )]/0.04,
"SuscS" = out[,grepl( "Ss" , names(out) )]/0.04,
"SuscR" = rowSums(out[,grepl( "Sg" , names(out) )])/0.92,
"InfV" = out[,grepl( "Iv" , names(out) )]/0.04,
"InfS" = out[,grepl( "Is" , names(out) )]/0.04,
"InfR" = rowSums(out[,grepl( "Ig" , names(out) )])/0.92,
"RecovV" = out[,grepl( "Rv" , names(out) )]/0.04,
"RecovS" = out[,grepl( "Rs" , names(out) )]/0.04,
"RecovR" = rowSums(out[,grepl( "Rg" , names(out) )])/0.92)
#Name the columns in the dataframe
colnames(out1) <- c("Time", "Suscv", "Suscs", "Suscr", "Infected_Iv", "Infected_Is", "Infected_Ir", "Recovv", "Recovs", "Recovr")
View(out1)
setwd("C:/Users/amorg/Documents/PhD/nCoV Work/Models") # This is where the plots output and where the .csv's are stored
rm(list=ls())
library("deSolve"); library("ggplot2"); library("ggpubr"); library("reshape2"); library("Cairo")
#### Common Model Parameters + Functions ####
phase1 <- data.frame(xmin=0, xmax=71, ymin=-Inf, ymax=Inf, name = "P1")
phase2 <- data.frame(xmin=71, xmax=71+(6*7), ymin=-Inf, ymax=Inf, name = "P2")
phase3 <- data.frame(xmin=71+(6*7), xmax=71+(6*7)+(12*7), ymin=-Inf, ymax=Inf, name = "P3")
phase4 <- data.frame(xmin=71+(6*7)+(12*7), xmax=Inf, ymin=-Inf, ymax=Inf, name = "P4")
#### Population Structure - 4-4-92 ####
#Import in Dataframe and Remove Cumulative Inf Columns
outimp <- read.csv("SIRS_MComp_simulation_4-4-92.csv")
outimp <- outimp[,1:(ncol(outimp)-3)]
out <- outimp[, -grep( "cum" , colnames(outimp) )]
#Create Dataframe for Plotting and Aggregate
out1 <- data.frame("time" = out$t,
"SuscV" = out[,grepl( "Sv" , names(out) )]/0.04,
"SuscS" = out[,grepl( "Ss" , names(out) )]/0.04,
"SuscR" = rowSums(out[,grepl( "Sg" , names(out) )])/0.92,
"InfV" = out[,grepl( "Iv" , names(out) )]/0.04,
"InfS" = out[,grepl( "Is" , names(out) )]/0.04,
"InfR" = rowSums(out[,grepl( "Ig" , names(out) )])/0.92,
"RecovV" = out[,grepl( "Rv" , names(out) )]/0.04,
"RecovS" = out[,grepl( "Rs" , names(out) )]/0.04,
"RecovR" = rowSums(out[,grepl( "Rg" , names(out) )])/0.92)
#Name the columns in the dataframe
colnames(out1) <- c("Time", "Suscv", "Suscs", "Suscr", "Infected_Iv", "Infected_Is", "Infected_Ir", "Recovv", "Recovs", "Recovr")
#Prepare the Dataframe for plotting
statsinfecv <- melt(out1[1:483,], id.vars = c("Time"), measure.vars = c("Infected_Iv", "Infected_Is", "Infected_Ir"))
statsinfecv$variable <- factor(statsinfecv$variable, levels=rev(levels(statsinfecv$variable)))
#Plotting
pinf94 <- ggplot(data = statsinfecv, aes(x = (Time), y = value, col = variable))  + theme_bw() +
labs(x ="Time (Days)", y = "Proportion Infected", color = "Population") + scale_y_continuous(limits = c(0,0.125), expand = c(0,0)) +
theme(legend.position = "none", legend.title = element_blank(), legend.text=element_text(size=14),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.7,0.7,-0.05,0.8),"cm")) + scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values=c('blue','darkgreen','red'), labels= c("General", "Shielders", "Vulnerable")) +
geom_rect(data=phase2, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_rect(data=phase3, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.35, inherit.aes = FALSE) +
geom_rect(data=phase4, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_text(data = phase1, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 25) +
geom_text(data = phase2, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 8) +
geom_text(data = phase3, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 30) +
geom_text(data = phase4, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 125) +
geom_line(size = 1.02, stat = "identity")
ggplot(data = statsinfecv, aes(x = (Time), y = value, col = variable))  + theme_bw() +
labs(x ="Time (Days)", y = "Proportion Infected", color = "Population") + scale_y_continuous(limits = c(0,0.125), expand = c(0,0)) +
theme(legend.position = "none", legend.title = element_blank(), legend.text=element_text(size=14),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.7,0.7,-0.05,0.8),"cm")) + scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values=c('blue','darkgreen','red'), labels= c("General", "Shielders", "Vulnerable")) +
geom_rect(data=phase2, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_rect(data=phase3, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.35, inherit.aes = FALSE) +
geom_rect(data=phase4, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_text(data = phase1, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 25) +
geom_text(data = phase2, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 8) +
geom_text(data = phase3, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 30) +
geom_text(data = phase4, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 125) +
geom_line(size = 1.02, stat = "identity")
#Cumulative Calculations - 1 Year after End of Lockdown
outc <- outimp[, grep( "cum" , colnames(outimp) )]
out1c <- data.frame("time" = outimp$t, "cumV" = outc[,grepl( "Iv" , names(outc) )]/0.02,
"cumE" = (outc[,grepl( "Ih" , names(outc) )] + rowSums(outc[,grepl( "Ir" , names(outc) )]))/0.98)
#Import in Dataframe and Remove Cumulative Inf Columns
outimp <- read.csv("SIRS_MComp_simulation_4-4-92_beta_s=beta_g.csv")
outimp <- outimp[,1:(ncol(outimp)-3)]
out <- outimp[, -grep( "cum" , colnames(outimp) )]
#Create Dataframe for Plotting and Aggregate
out1 <- data.frame("time" = out$t,
"SuscV" = out[,grepl( "Sv" , names(out) )]/0.04,
"SuscS" = out[,grepl( "Ss" , names(out) )]/0.04,
"SuscR" = rowSums(out[,grepl( "Sg" , names(out) )])/0.92,
"InfV" = out[,grepl( "Iv" , names(out) )]/0.04,
"InfS" = out[,grepl( "Is" , names(out) )]/0.04,
"InfR" = rowSums(out[,grepl( "Ig" , names(out) )])/0.92,
"RecovV" = out[,grepl( "Rv" , names(out) )]/0.04,
"RecovS" = out[,grepl( "Rs" , names(out) )]/0.04,
"RecovR" = rowSums(out[,grepl( "Rg" , names(out) )])/0.92)
#Name the columns in the dataframe
colnames(out1) <- c("Time", "Suscv", "Suscs", "Suscr", "Infected_Iv", "Infected_Is", "Infected_Ir", "Recovv", "Recovs", "Recovr")
#Prepare the Dataframe for plotting
statsinfecv <- melt(out1[1:483,], id.vars = c("Time"), measure.vars = c("Infected_Iv", "Infected_Is", "Infected_Ir"))
statsinfecv$variable <- factor(statsinfecv$variable, levels=rev(levels(statsinfecv$variable)))
#Plotting
pinf94alter <- ggplot(data = statsinfecv, aes(x = (Time), y = value, col = variable))  + theme_bw() +
labs(x ="Time (Days)", y = "Proportion Infected", color = "Population") + scale_y_continuous(limits = c(0,0.125), expand = c(0,0)) +
theme(legend.position = "none", legend.title = element_blank(), legend.text=element_text(size=14),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.7,0.7,-0.05,0.8),"cm")) + scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values=c('blue','darkgreen','red'), labels= c("General", "Shielders", "Vulnerable")) +
geom_rect(data=phase2, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_rect(data=phase3, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.35, inherit.aes = FALSE) +
geom_rect(data=phase4, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_text(data = phase1, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 25) +
geom_text(data = phase2, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 8) +
geom_text(data = phase3, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 30) +
geom_text(data = phase4, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 125) +
geom_line(size = 1.02, stat = "identity")
ggplot(data = statsinfecv, aes(x = (Time), y = value, col = variable))  + theme_bw() +
labs(x ="Time (Days)", y = "Proportion Infected", color = "Population") + scale_y_continuous(limits = c(0,0.125), expand = c(0,0)) +
theme(legend.position = "bottom", legend.title = element_blank(), legend.text=element_text(size=14),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.7,0.7,-0.05,0.8),"cm")) + scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values=c('blue','darkgreen','red'), labels= c("General", "Shielders", "Vulnerable")) +
geom_rect(data=phase2, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_rect(data=phase3, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.35, inherit.aes = FALSE) +
geom_rect(data=phase4, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_text(data = phase1, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 25) +
geom_text(data = phase2, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 8) +
geom_text(data = phase3, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 30) +
geom_text(data = phase4, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 125) +
geom_line(size = 1.02, stat = "identity")
setwd("C:/Users/amorg/Documents/PhD/nCoV Work/Models") # This is where the plots output and where the .csv's are stored
rm(list=ls())
library("deSolve"); library("ggplot2"); library("ggpubr"); library("reshape2"); library("Cairo")
#### Common Model Parameters + Functions ####
phase1 <- data.frame(xmin=0, xmax=71, ymin=-Inf, ymax=Inf, name = "P1")
phase2 <- data.frame(xmin=71, xmax=71+(6*7), ymin=-Inf, ymax=Inf, name = "P2")
phase3 <- data.frame(xmin=71+(6*7), xmax=71+(6*7)+(12*7), ymin=-Inf, ymax=Inf, name = "P3")
phase4 <- data.frame(xmin=71+(6*7)+(12*7), xmax=Inf, ymin=-Inf, ymax=Inf, name = "P4")
#### Population Structure - 4-4-92 ####
#Import in Dataframe and Remove Cumulative Inf Columns
outimp <- read.csv("SIRS_MComp_simulation_4-4-92.csv")
outimp <- outimp[,1:(ncol(outimp)-3)]
out <- outimp[, -grep( "cum" , colnames(outimp) )]
#Create Dataframe for Plotting and Aggregate
out1 <- data.frame("time" = out$t,
"SuscV" = out[,grepl( "Sv" , names(out) )]/0.04,
"SuscS" = out[,grepl( "Ss" , names(out) )]/0.04,
"SuscR" = rowSums(out[,grepl( "Sg" , names(out) )])/0.92,
"InfV" = out[,grepl( "Iv" , names(out) )]/0.04,
"InfS" = out[,grepl( "Is" , names(out) )]/0.04,
"InfR" = rowSums(out[,grepl( "Ig" , names(out) )])/0.92,
"RecovV" = out[,grepl( "Rv" , names(out) )]/0.04,
"RecovS" = out[,grepl( "Rs" , names(out) )]/0.04,
"RecovR" = rowSums(out[,grepl( "Rg" , names(out) )])/0.92)
#Name the columns in the dataframe
colnames(out1) <- c("Time", "Suscv", "Suscs", "Suscr", "Infected_Iv", "Infected_Is", "Infected_Ir", "Recovv", "Recovs", "Recovr")
#Prepare the Dataframe for plotting
statsinfecv <- melt(out1[1:483,], id.vars = c("Time"), measure.vars = c("Infected_Iv", "Infected_Is", "Infected_Ir"))
statsinfecv$variable <- factor(statsinfecv$variable, levels=rev(levels(statsinfecv$variable)))
#Plotting
pinf94 <- ggplot(data = statsinfecv, aes(x = (Time), y = value, col = variable))  + theme_bw() +
labs(x ="Time (Days)", y = "Proportion Infected", color = "Population") + scale_y_continuous(limits = c(0,0.125), expand = c(0,0)) +
theme(legend.position = "bottom", legend.title = element_blank(), legend.text=element_text(size=14),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.7,0.7,-0.05,0.8),"cm")) + scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values=c('blue','darkgreen','red'), labels= c("General", "Shielders", "Vulnerable")) +
geom_rect(data=phase2, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_rect(data=phase3, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.35, inherit.aes = FALSE) +
geom_rect(data=phase4, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_text(data = phase1, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 25) +
geom_text(data = phase2, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 8) +
geom_text(data = phase3, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 30) +
geom_text(data = phase4, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 125) +
geom_line(size = 1.02, stat = "identity")
#Cumulative Calculations - 1 Year after End of Lockdown
outc <- outimp[, grep( "cum" , colnames(outimp) )]
out1c <- data.frame("time" = outimp$t, "cumV" = outc[,grepl( "Iv" , names(outc) )]/0.02,
"cumE" = (outc[,grepl( "Ih" , names(outc) )] + rowSums(outc[,grepl( "Ir" , names(outc) )]))/0.98)
#Calculate the Cumulative Infections  1 year after end of lockdown
out1c$cumV.cumIv[out1c$time == 113+(365)]-out1c$cumV.cumIv[out1c$time == 113]
out1c$cumE[out1c$time == 113+(365)]- out1c$cumE[out1c$time == 113]
#### Population Structure - 4-4-92 - Shielders Equal to General ####
#Import in Dataframe and Remove Cumulative Inf Columns
outimp <- read.csv("SIRS_MComp_simulation_4-4-92_beta_s=beta_g.csv")
outimp <- outimp[,1:(ncol(outimp)-3)]
out <- outimp[, -grep( "cum" , colnames(outimp) )]
#Create Dataframe for Plotting and Aggregate
out1 <- data.frame("time" = out$t,
"SuscV" = out[,grepl( "Sv" , names(out) )]/0.04,
"SuscS" = out[,grepl( "Ss" , names(out) )]/0.04,
"SuscR" = rowSums(out[,grepl( "Sg" , names(out) )])/0.92,
"InfV" = out[,grepl( "Iv" , names(out) )]/0.04,
"InfS" = out[,grepl( "Is" , names(out) )]/0.04,
"InfR" = rowSums(out[,grepl( "Ig" , names(out) )])/0.92,
"RecovV" = out[,grepl( "Rv" , names(out) )]/0.04,
"RecovS" = out[,grepl( "Rs" , names(out) )]/0.04,
"RecovR" = rowSums(out[,grepl( "Rg" , names(out) )])/0.92)
#Name the columns in the dataframe
colnames(out1) <- c("Time", "Suscv", "Suscs", "Suscr", "Infected_Iv", "Infected_Is", "Infected_Ir", "Recovv", "Recovs", "Recovr")
#Prepare the Dataframe for plotting
statsinfecv <- melt(out1[1:483,], id.vars = c("Time"), measure.vars = c("Infected_Iv", "Infected_Is", "Infected_Ir"))
statsinfecv$variable <- factor(statsinfecv$variable, levels=rev(levels(statsinfecv$variable)))
#Plotting
pinf94alter <- ggplot(data = statsinfecv, aes(x = (Time), y = value, col = variable))  + theme_bw() +
labs(x ="Time (Days)", y = "Proportion Infected", color = "Population") + scale_y_continuous(limits = c(0,0.125), expand = c(0,0)) +
theme(legend.position = "bottom", legend.title = element_blank(), legend.text=element_text(size=14),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.7,0.7,-0.05,0.8),"cm")) + scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values=c('blue','darkgreen','red'), labels= c("General", "Shielders", "Vulnerable")) +
geom_rect(data=phase2, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_rect(data=phase3, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.35, inherit.aes = FALSE) +
geom_rect(data=phase4, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_text(data = phase1, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 25) +
geom_text(data = phase2, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 8) +
geom_text(data = phase3, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 30) +
geom_text(data = phase4, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 125) +
geom_line(size = 1.02, stat = "identity")
#### Plotting ####
#Anti-Aliasing in Plots - Can Ignore
ggsave(plot94, filename = "FigExtra.png", dpi = 300, type = "cairo",
width = 8, height = 8,units = "in")
ggsave(plot94equal, filename = "FigExtraEqual.png", dpi = 300, type = "cairo",
width = 8, height = 8,units = "in")
setwd("C:/Users/amorg/Documents/PhD/nCoV Work/Models") # This is where the plots output and where the .csv's are stored
rm(list=ls())
library("deSolve"); library("ggplot2"); library("ggpubr"); library("reshape2"); library("Cairo")
#### Common Model Parameters + Functions ####
phase1 <- data.frame(xmin=0, xmax=71, ymin=-Inf, ymax=Inf, name = "P1")
phase2 <- data.frame(xmin=71, xmax=71+(6*7), ymin=-Inf, ymax=Inf, name = "P2")
phase3 <- data.frame(xmin=71+(6*7), xmax=71+(6*7)+(12*7), ymin=-Inf, ymax=Inf, name = "P3")
phase4 <- data.frame(xmin=71+(6*7)+(12*7), xmax=Inf, ymin=-Inf, ymax=Inf, name = "P4")
#### Population Structure - 4-4-92 ####
#Import in Dataframe and Remove Cumulative Inf Columns
outimp <- read.csv("SIRS_MComp_simulation_4-4-92.csv")
outimp <- outimp[,1:(ncol(outimp)-3)]
out <- outimp[, -grep( "cum" , colnames(outimp) )]
#Create Dataframe for Plotting and Aggregate
out1 <- data.frame("time" = out$t,
"SuscV" = out[,grepl( "Sv" , names(out) )]/0.04,
"SuscS" = out[,grepl( "Ss" , names(out) )]/0.04,
"SuscR" = rowSums(out[,grepl( "Sg" , names(out) )])/0.92,
"InfV" = out[,grepl( "Iv" , names(out) )]/0.04,
"InfS" = out[,grepl( "Is" , names(out) )]/0.04,
"InfR" = rowSums(out[,grepl( "Ig" , names(out) )])/0.92,
"RecovV" = out[,grepl( "Rv" , names(out) )]/0.04,
"RecovS" = out[,grepl( "Rs" , names(out) )]/0.04,
"RecovR" = rowSums(out[,grepl( "Rg" , names(out) )])/0.92)
#Name the columns in the dataframe
colnames(out1) <- c("Time", "Suscv", "Suscs", "Suscr", "Infected_Iv", "Infected_Is", "Infected_Ir", "Recovv", "Recovs", "Recovr")
#Prepare the Dataframe for plotting
statsinfecv <- melt(out1[1:483,], id.vars = c("Time"), measure.vars = c("Infected_Iv", "Infected_Is", "Infected_Ir"))
statsinfecv$variable <- factor(statsinfecv$variable, levels=rev(levels(statsinfecv$variable)))
#Plotting
pinf94 <- ggplot(data = statsinfecv, aes(x = (Time), y = value, col = variable))  + theme_bw() +
labs(x ="Time (Days)", y = "Proportion Infected", color = "Population") + scale_y_continuous(limits = c(0,0.125), expand = c(0,0)) +
theme(legend.position = "bottom", legend.title = element_blank(), legend.text=element_text(size=14),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.7,0.7,-0.05,0.8),"cm")) + scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values=c('blue','darkgreen','red'), labels= c("General", "Shielders", "Vulnerable")) +
geom_rect(data=phase2, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_rect(data=phase3, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.35, inherit.aes = FALSE) +
geom_rect(data=phase4, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_text(data = phase1, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 25) +
geom_text(data = phase2, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 8) +
geom_text(data = phase3, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 30) +
geom_text(data = phase4, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 125) +
geom_line(size = 1.02, stat = "identity")
#Cumulative Calculations - 1 Year after End of Lockdown
outc <- outimp[, grep( "cum" , colnames(outimp) )]
out1c <- data.frame("time" = outimp$t, "cumV" = outc[,grepl( "Iv" , names(outc) )]/0.02,
"cumE" = (outc[,grepl( "Ih" , names(outc) )] + rowSums(outc[,grepl( "Ir" , names(outc) )]))/0.98)
#Calculate the Cumulative Infections  1 year after end of lockdown
out1c$cumV.cumIv[out1c$time == 113+(365)]-out1c$cumV.cumIv[out1c$time == 113]
out1c$cumE[out1c$time == 113+(365)]- out1c$cumE[out1c$time == 113]
#### Population Structure - 4-4-92 - Shielders Equal to General ####
#Import in Dataframe and Remove Cumulative Inf Columns
outimp <- read.csv("SIRS_MComp_simulation_4-4-92_beta_s=beta_g.csv")
outimp <- outimp[,1:(ncol(outimp)-3)]
out <- outimp[, -grep( "cum" , colnames(outimp) )]
#Create Dataframe for Plotting and Aggregate
out1 <- data.frame("time" = out$t,
"SuscV" = out[,grepl( "Sv" , names(out) )]/0.04,
"SuscS" = out[,grepl( "Ss" , names(out) )]/0.04,
"SuscR" = rowSums(out[,grepl( "Sg" , names(out) )])/0.92,
"InfV" = out[,grepl( "Iv" , names(out) )]/0.04,
"InfS" = out[,grepl( "Is" , names(out) )]/0.04,
"InfR" = rowSums(out[,grepl( "Ig" , names(out) )])/0.92,
"RecovV" = out[,grepl( "Rv" , names(out) )]/0.04,
"RecovS" = out[,grepl( "Rs" , names(out) )]/0.04,
"RecovR" = rowSums(out[,grepl( "Rg" , names(out) )])/0.92)
#Name the columns in the dataframe
colnames(out1) <- c("Time", "Suscv", "Suscs", "Suscr", "Infected_Iv", "Infected_Is", "Infected_Ir", "Recovv", "Recovs", "Recovr")
#Prepare the Dataframe for plotting
statsinfecv <- melt(out1[1:483,], id.vars = c("Time"), measure.vars = c("Infected_Iv", "Infected_Is", "Infected_Ir"))
statsinfecv$variable <- factor(statsinfecv$variable, levels=rev(levels(statsinfecv$variable)))
#Plotting
pinf94alter <- ggplot(data = statsinfecv, aes(x = (Time), y = value, col = variable))  + theme_bw() +
labs(x ="Time (Days)", y = "Proportion Infected", color = "Population") + scale_y_continuous(limits = c(0,0.125), expand = c(0,0)) +
theme(legend.position = "bottom", legend.title = element_blank(), legend.text=element_text(size=14),  axis.text=element_text(size=14),
axis.title.y=element_text(size=14),axis.title.x = element_text(size=14),
legend.spacing.x = unit(0.3, 'cm'), plot.margin=unit(c(0.7,0.7,-0.05,0.8),"cm")) + scale_x_continuous(expand = c(0, 0)) +
scale_color_manual(values=c('blue','darkgreen','red'), labels= c("General", "Shielders", "Vulnerable")) +
geom_rect(data=phase2, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_rect(data=phase3, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.35, inherit.aes = FALSE) +
geom_rect(data=phase4, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey", alpha=0.5, inherit.aes = FALSE) +
geom_text(data = phase1, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 25) +
geom_text(data = phase2, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 8) +
geom_text(data = phase3, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 30) +
geom_text(data = phase4, aes(x = xmin, y = 0.11, label = name),inherit.aes = FALSE, size = 8, vjust = 0, hjust = 0, nudge_x = 125) +
geom_line(size = 1.02, stat = "identity")
#### Plotting ####
#Anti-Aliasing in Plots - Can Ignore
ggsave(pinf94, filename = "FigExtra.png", dpi = 300, type = "cairo",
width = 8, height = 8,units = "in")
ggsave(pinf94alter, filename = "FigExtraEqual.png", dpi = 300, type = "cairo",
width = 8, height = 8,units = "in")
